#!/bin/bash

cd /home/hydro/hydroshare

source env.sh

# Read hydroshare-config.yaml into environment
sed -e "s/:[^:\/\/]/=/g;s/$//g;s/ *=/=/g" ${CONFIG_FILE} > $CONFIG_DIRECTORY/hydroshare-config.sh
sed -i 's/#.*$//' ${CONFIG_DIRECTORY}/hydroshare-config.sh
sed -i '/^\s*$/d' ${CONFIG_DIRECTORY}/hydroshare-config.sh
while read line; do export $line; done < <(cat ${CONFIG_DIRECTORY}/hydroshare-config.sh)

function status() {
    source env.sh
}

function proxy_start() {
    echo
    echo "START:"
    status
    if [ "$IS_RUNNING" != "" ]; then
        echo "Proxy is running."
        exit 1
    fi

    if [ "$CURRENT_VM" == "" ]; then
        if [ "$IS_RUNNING" != "" ]; then
            CURRENT_VM=$RUNNING_VM
        else
            CURRENT_VM=`head -n 1 $WORKER_FILE`
        fi
    fi

    if [ "$CURRENT_VM" == "" ]; then
        echo "No worker machine selected"
        exit 1
    fi

    cd ${NGINX_DIR}
    ./run-nginx start
    cd -
    status
}

function proxy_stop() {
    echo
    echo "STOP:"
    status
    if [ "$IS_RUNNING" == "" ]; then
        echo "Proxy is stopped."
        exit 1
    fi
    cd ${NGINX_DIR}
    ./run-nginx stop
    cd -
    status
}

function proxy_restart() {
    echo
    echo "RESTART:"
    proxy_stop
    proxy_start
}

function worker_list() {
    echo
    echo "LIST:"
    status
    num=1
    while read WORKER
    do
        ORG=$WORKER
	if [ "$ORG" == "$CURRENT_VM" ]; then
	    WORKER="$WORKER (Next Start)"
	fi
	if [ "$IS_RUNNING" != "" ] && [ "$ORG" == "$RUNNING_VM" ]; then
	    WORKER="$WORKER (Active)"
	fi
	echo "${num}: ${WORKER}"
	num=$(($num + 1))
    done < $WORKER_FILE
    system_maint
    echo
}

function worker_select() {
    echo
    echo "SELECT:"
    if [ "$1" == "" ]; then
        worker_list
        echo
        echo -n "ENTER the <ID> of a worker or press <Ctrl+C> to exit: "
        read ID
        if [ $ID -lt 1 ] || [ $ID -gt `cat $WORKER_FILE | wc -l` ]; then
            echo "Incorrect ID"
            exit 1
        fi
        echo -n "`head -n $ID $WORKER_FILE | tail -n 1`" > $CURRENT_FILE
    else
        ID=`grep "^${1}$" $WORKER_FILE`
        if [ "$ID" == "" ]; then
            echo "Incorrect worker name"
            exit 1
        fi
        echo -n "$ID" > $CURRENT_FILE
        worker_list
    fi
}

function system_maint() {
    echo
    echo "MAINTENANCE:"
    echo
    status
    cd ${NGINX_DIR}
    case "$1" in
         on) ./run-nginx maint_on && exit 0
             ;;
        off) ./run-nginx maint_off && exit 0
             ;;
    esac
    if [ -f static/maintenance_on.html ]; then
	echo "maintenance mode is ON"
    else
	echo "maintenance mode is OFF"
    fi
    echo
}

case "$1" in
    start) proxy_start   && worker_list && exit 0
           ;;
     stop) proxy_stop    && worker_list && exit 0
           ;;
  restart) proxy_restart && worker_list && exit 0
           ;;
     list) worker_list   && exit 0
           ;;
   select) worker_select $2 && exit 0
           ;;
    maint) system_maint  $2 && exit 0
           ;;
esac

echo 
echo "  Usage: $0 <start|stop|restart|list|maint [on|off]|select>"
echo 


